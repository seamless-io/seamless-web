name: Tests

on: pull_request

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test_requirements.txt

      - name: Execute flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  unit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test_requirements.txt

      - name: Run unittests
        run: pytest -v tests/unit

  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test_requirements.txt

      - name: Run mypy
        run: mypy .

  integration:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test_requirements.txt

      - name: Build client  # we can possible not build a client, but create a vanilla `index.html` for integration tests
        run: cd client && npm install -g parcel && npm install && npm run build

      - name: Run integration tests
        run: PYTHONPATH=. pytest -v tests/integration  # adding PYTHONPATH=. since we are executing bash command within the Python process
